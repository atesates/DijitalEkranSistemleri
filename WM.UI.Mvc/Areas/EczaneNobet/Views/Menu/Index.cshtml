@model IEnumerable<Menu>

@{
    ViewBag.Title = "Index";
}

<div class="row justify-content-between mb-2">
    <div class="col-md-4 mb-2">

        <div class="form-inline">
            <h4 class="mr-5">Menü</h4>
            <div class="form-group">
                <a class="btn btn-outline-success btn-sm" href="@Url.Action("Create", null, new { area= "EczaneNobet" })"><span class="fa fa-plus"></span> Yeni Kayıt</a>
            </div>
        </div>
    </div>
</div>
@*----------------loading gif--------------------*@
<div class="row">
    <div class="col-lg-3">
    </div>
    <div class="col-lg-4">
        <div id="loading" align="center" style="margin-top: 10%">
            <img src="~/Content/images/orig.gif" />
        </div>
    </div>
    <div class="col-lg-4">
    </div>
</div>
<div id="div1">
    <table class="table table-hover table-responsive table-sm">
        <thead class="thead-light">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LinkText)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ActionName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ControllerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AreaName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SpanCssClass)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PasifMi)
                </th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LinkText)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ActionName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ControllerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AreaName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SpanCssClass)
                </td>
                <td>
                    @if (item.PasifMi)
                    {
                        <label class="badge badge-danger">
                            <i class="fa fa-check-circle-o" aria-hidden="true"></i>
                            Pasif
                        </label>
                    }
                    else
                    {
                        <label class="badge badge-success">
                            <i class="fa fa-check-circle-o" aria-hidden="true"></i>
                            Aktif
                        </label>
                    }
                    @*@Html.DisplayFor(modelItem => item.PasifMi)*@
                </td>
                <td>
                    <button class="btn btn-sm btn-secondary d-sm-block d-md-none" type="button" data-toggle="collapse" data-target="#islem" aria-controls="navbarColor03" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="fa fa-cog"></span>
                    </button>
                    <div class="collapse d-md-block" id="islem">
                        @Html.ActionLink(" ", "Edit", new { id = item.Id }, new { @class = "btn btn-outline-success btn-sm fa fa-edit fa-lg" })
                        @Html.ActionLink(" ", "Details", new { id = item.Id }, new { @class = "btn btn-outline-primary btn-sm fa fa-info-circle fa-lg" })
                        @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "btn btn-outline-danger btn-sm fa fa-remove fa-lg" })
                    </div>
                </td>
            </tr>
        }

    </table>
    <nav class="navbar navbar-expand-lg navbar-light bg-light" aria-label="...">
        <ul class="navbar-nav">
            <li class="nav-link" id="myPaging">
            </li>
        </ul>
        <div class="nav-item">Toplam Kayıt: <span id="toplamKayitSayisi"></span></div>
    </nav>
</div>

@section Scripts{
    @Scripts.Render("~/bundle/pager")
    <script>
            $(document).ready(function () {
                var model = @Html.Raw(Json.Encode(Model.Select(s=>s.LinkText)));

                sayfalamaYap(model, 20);

                veriyiGizleLoadingGifiGoster();
                $("#myInput").on("keyup", function () {
                var value = $(this).val().toLocaleLowerCase('tr-TR');
                $("#eczaneTablo tr").filter(function () {
                    $(this).toggle($(this).text().toLocaleLowerCase('tr-TR').indexOf(value) > -1)
                });
                if ($(this).val().length == 0) {
                    getPaging(currentPage)
                }
                });

                $('#btnExceleAktar').click(function () {
                    // alert('ConfirmSubmit')
                    $("#gridT > tbody > tr").each(function (i, el) {
                        $(this).css('display', 'table-row');
                    });
                    exportToExcel();
                    //location.reload();
                    sayfalamaYap(model, 20);
                });
                function exportToExcel() {
                    var htmls = "";
                    var uri = 'data:application/vnd.ms-excel;base64,';
                    var template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><meta http-equiv="content-type" content="application/vnd.ms-excel; charset=UTF-8"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>';
                    var base64 = function (s) {
                        return window.btoa(unescape(encodeURIComponent(s)))
                    };

                    var format = function (s, c) {
                        return s.replace(/{(\w+)}/g, function (m, p) {
                            return c[p];
                        })
                    };

                    htmls = $("table").html();

                    var ctx = {
                        worksheet: 'Worksheet',
                        table: htmls
                    }

                    var link = document.createElement("a");
                    link.download = "menuAltlar.xls";
                    link.href = uri + base64(format(template, ctx));
                    link.click();
                }
            });

            function veriyiGizleLoadingGifiGoster() {
                document.getElementById("div1").style.visibility = "hidden";//sayfa yüklenirken tablo gizlenir
                // document.getElementById("div_searching").style.visibility = "hidden";//sayfa yüklenirken tablo gizlenir
                document.getElementById("loading").style.visibility = "visible";//sayfa yüklenirken loading gif i gösterilir
                acilisiGeciktir()
            }
            function acilisiGeciktir() {
                setTimeout(
                    loadingGifiGizleVeriyiGoster, /* Request next message  */
                    200 /* ..after ms seconds */
                );
            }
            function loadingGifiGizleVeriyiGoster() {
                document.getElementById("div1").style.visibility = "visible";//tablo gösterilir
                // document.getElementById("div_searching").style.visibility = "visible";//sayfa yüklenirken tablo gizlenir
                document.getElementById("loading").style.visibility = "hidden";//gif gizlenir
                document.getElementById("loading").style.display = "none";//gif yer kaplamasın
            }

    </script>
}